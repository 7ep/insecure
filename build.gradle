
plugins {
    id 'war'

    id "com.bmuschko.tomcat" version "2.5"

    // scans our code for static analysis
    id "org.sonarqube" version "2.6.2"

    // Dependency Check analyzes the dependencies for 
    // potential security issues.
    // see https://plugins.gradle.org/plugin/org.owasp.dependencycheck
    id "org.owasp.dependencycheck" version "5.2.0"
}

// sets the version of Java we want to use - 8
sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    def tomcatVersion = '9.0.27'
        tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
                "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

	compile group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'

}

tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}

sonarqube {
    properties {
        property "sonar.projectName", "insecure_webapp"
        property "sonar.projectDescription", "A demonstration of an insecure web application, by OWASP"
        property "sonar.sources", "src/main/java"
        property "sonar.java.binaries", "build/classes/java/main"
    }
}


dependencyCheck {
    showSummary = false
    autoUpdate = false
    cveValidForHours = 168 // a week.
    format = 'HTML' // options are  (HTML, XML, CSV, JSON, VULN, ALL).
    failBuildOnCVSS = 8 // see https://www.first.org/cvss/specification-document#5-Qualitative-Severity-Rating-Scale
}


task('printReportPathsDependencyCheck') {
    doLast {
        print "\n\n\n"
        println "-------------------------------------------------------------------------------"
        println "Reports were generated by the tests."
        println "-------------------------------------------------------------------------------"
        println ""
        println "Dependency Check:        build/reports/dependency-check-report.html"
        println "-------------------------------------------------------------------------------"
        print "\n"
    }
}

dependencyCheckAnalyze.finalizedBy 'printReportPathsDependencyCheck'
