buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:4.0.2'
    }
}


plugins {
    id 'war'

    // gretty is a gradle plugin to make it easy to run a server and hotswap code at runtime.
    id 'org.gretty' version '2.3.1'

    // scans our code for static analysis
    id "org.sonarqube" version "2.6.2"
}

// sets the version of Java we want to use - 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

// Dependency Check analyzes the dependencies for potential security issues.
// see https://plugins.gradle.org/plugin/org.owasp.dependencycheck
apply plugin: 'org.owasp.dependencycheck'


repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

	compile group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'

}

// configure jetty to run on port 8080 when we run "./gradlew appRun"
gretty {
    httpPort = 8080
    servletContainer = 'tomcat8'
    contextPath = "asc"
}

sonarqube {
    properties {
        property "sonar.projectName", "demo"
        property "sonar.projectDescription", "A demonstration of a web application with good test coverage and best practices"
        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java,src/integration_test/java,src/bdd_test/java"
        property "sonar.java.binaries", "build/classes/java/main"
        property "sonar.junit.reportPaths", "build/test-results/test/,build/test-results/fastIntegrationTest"
        property "sonar.jacoco.reportPaths", "build/jacoco/test.exec,build/jacoco/fastIntegrationTest.exec"
    }
}


dependencyCheck {
    showSummary = false
    autoUpdate = false
    cveValidForHours = 168 // a week.
    format = 'HTML' // options are  (HTML, XML, CSV, JSON, VULN, ALL).
    failBuildOnCVSS = 8 // see https://www.first.org/cvss/specification-document#5-Qualitative-Severity-Rating-Scale
}


task('printReportPathsDependencyCheck') {
    doLast {
        print "\n\n\n"
        println "-------------------------------------------------------------------------------"
        println "Reports were generated by the tests."
        println "-------------------------------------------------------------------------------"
        println ""
        println "Dependency Check:        build/reports/dependency-check-report.html"
        println "-------------------------------------------------------------------------------"
        print "\n"
    }
}

dependencyCheckAnalyze.finalizedBy 'printReportPathsDependencyCheck'
