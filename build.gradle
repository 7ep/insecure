
plugins {
    id 'war'

    id "org.gretty" version "3.0.4"

    // scans our code for static analysis
    id "org.sonarqube" version "3.0"

    // Dependency Check analyzes the dependencies for 
    // potential security issues.
    // see https://plugins.gradle.org/plugin/org.owasp.dependencycheck
    id "org.owasp.dependencycheck" version "6.1.6"

    // https://blog.gradle.org/java-toolchains
    // java toolchains - a gradle 6.7 feature - allows us to
    // specify an exact version of the JDK to use when compiling,
    // and will pull it down if not found on the user's machine.
    id "java-library"
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

	implementation group: 'org.hsqldb', name: 'hsqldb', version: '2.4.1'

}

// configure jetty to run on port 8080 when we run "./gradlew appRun"
gretty {
    httpPort = 8081
    servletContainer = 'tomcat9'
    contextPath = "insecure"
}

sonarqube {
    properties {
        property "sonar.projectName", "insecure_webapp"
        property "sonar.projectDescription", "A demonstration of an insecure web application, by OWASP"
        property "sonar.sources", "src/main/java"
        property "sonar.java.binaries", "build/classes/java/main"
    }
}


dependencyCheck {
    // if we don't include the specific configurations to scan, it will scan everything,
    // which means getting into the dependencies of tomcat and jetty, which should
    // have no bearing on us.
    scanConfigurations = ['default']
    showSummary = false
    autoUpdate = true
    cveValidForHours = 24 * 30 // about a month.
    format = 'HTML' // options are  (HTML, XML, CSV, JSON, VULN, ALL).
    failBuildOnCVSS = 8 // see https://www.first.org/cvss/specification-document#5-Qualitative-Severity-Rating-Scale
}


task('printReportPathsDependencyCheck') {
    doLast {
        print "\n\n\n"
        println "-------------------------------------------------------------------------------"
        println "Reports were generated by the tests."
        println "-------------------------------------------------------------------------------"
        println ""
        println "Dependency Check:        build/reports/dependency-check-report.html"
        println "-------------------------------------------------------------------------------"
        print "\n"
    }
}

dependencyCheckAnalyze.finalizedBy 'printReportPathsDependencyCheck'
